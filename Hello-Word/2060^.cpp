/*问题描述
背景：
菲利普喜欢在他想要放松的时候玩Snooker的QQ游戏，尽管他只是一只小菜鸟。也许你还没玩过那个游戏，不管怎样，我先为你介绍一下这个规则。
船上有21个物体球，包括15个红球和6个彩球：黄色，绿色，棕色，蓝色，粉红色，黑色。
玩家应该使用白色主球使物体球滚入洞中，球在洞中的固定值的总和是玩家的得分。球员首先应该在球洞中制造一个红球，然后他获得红球的价值（1分），然后他有机会制作彩球，然后交替进行。应该取出彩球，直到所有的红球都在洞里。换句话说，如果船上只留下彩球，则玩家应按此顺序击中对象球：黄色（2点），绿色（3点），棕色（4点），蓝色（5点），粉红色（6分），黑色（7分），在球被击入球洞后，他们没有离开球洞，在没有球离开后，比赛结束，
得分较高的球员赢得比赛。PS：
我只是说明了可能使用的规则，如果您想联系更多细节，请在
比赛结束后访问http://sports.tom.com/snooker/ 。
例如，如果船上有12个红球（如果船上还有红球，则可以确定所有
彩球都必须在船上）。所以假设菲尔普可以继续将球击入洞中，他可以得到最大分数为
12 * 1（一次射击12个红球）+ 7 * 12（击中一个红球后，一个最有价值的黑球）球应该是目标）+ 2 + 3 + 4 + 5 + 6 + 7（当没有留下红球时，将所有颜色的球放入洞中）。
现在，你的任务是判断菲利普是否应该在告诉你船上的情况时做出放弃的决定（多少个物体球仍未留在洞中，另一个球员得分）。如果Philp仍然有机会获胜，只需打印“是”，否则打印“否”。（PS：如果他可以登上的最高分数加上他当前的分数等于对手的当前分数，仍然输出“是”）
输入
第一行包含一个表示总条件的数字N. 然后是N行，每一行由三个整数组成：
Ball_Left P_Score O_Score表示留在球上的球数，Philp的当前得分以及对手的当前得分。
所有输入值均在32位整数值范围内。
产量
你应该计算出菲尔普可以获得的最高分，并判断他是否有可能获胜。
Sample Input
2
12 1 1
1 30 39
Sample Output
Yes
No
*/
#include<stdio.h>
int main(){ 
	 
	return 0;
}